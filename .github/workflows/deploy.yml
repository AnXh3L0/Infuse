name: Deploy Hugo Site to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  check-fork-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch the full commit history

      - name: Check if PR is from a fork and if deploy.yml was modified
        run: |
          # Check if the PR is from a fork
          if [[ "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
            # Check if deploy.yml has been modified in the PR
            MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

            if echo "$MODIFIED_FILES" | grep -q ".github/workflows/deploy.yml"; then
              echo "Deploy.yml was modified in a PR from a fork. Aborting workflow."
              exit 1
            else
              echo "PR from fork, but deploy.yml was not modified. Proceeding with workflow."
            fi
          else
            echo "PR is not from a fork. Proceeding with workflow."
          fi
          
  build:
    runs-on: ubuntu-latest
    needs: check-fork-and-deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.16.0'
        cache: 'npm'

    - name: Cache Hugo
      uses: actions/cache@v2
      with:
        path: ~/.hugo_cache
        key: ${{ runner.os }}-hugo-${{ hashFiles('**/hugo.toml') }}
        restore-keys: |
          ${{ runner.os }}-hugo-

    - name: Install Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'

    - name: Install dependencies
      run: npm install

    - name: Build TailwindCSS
      run: npm run build-tw

    - name: Build Hugo site for PR Preview
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      env:
        HUGO_ENVIRONMENT: production
        HUGO_BASEURL: "https://infuse.quest/pr-${{ github.event.pull_request.number }}/"
      run: hugo --minify -d ./public

    - name: Build Hugo site for Main Deployment
      if: github.ref == 'refs/heads/main'
      env:
        HUGO_ENVIRONMENT: production
        HUGO_BASEURL: "https://infuse.quest/"
      run: hugo --minify -d ./public

    - name: Create CNAME file
      if: github.ref == 'refs/heads/main'
      run: echo 'infuse.quest' > public/CNAME

    - name: Deploy PR Preview to GitHub Pages
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        destination_dir: pr-${{ github.event.pull_request.number }}

    - name: Deploy Main Site to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public

    - name: Post Preview URL in PR Comments
      if: github.event_name == 'pull_request' && github.event.action != 'closed'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        BASE_URL="https://infuse.quest/pr-${PR_NUMBER}"
        COMMENT="üåê Preview your changes here:\n"
        COMMENT="${COMMENT}: [${BASE_URL}/en](${BASE_URL}/en)\n"
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"${COMMENT}\"}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"

  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
    - name: Remove Preview Deployment
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        destination_dir: pr-${{ github.event.pull_request.number }}
        remove_files: true
